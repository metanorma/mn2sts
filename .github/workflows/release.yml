name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Release to Maven and GitHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

#      - name: Use Metanorma
#        run: |
#          sudo apt-get update
#          curl -L https://raw.githubusercontent.com/metanorma/metanorma-linux-setup/master/ubuntu.sh | sudo bash
#          sudo chown -R $USER:$(id -gn $USER) $HOME/.config

      - name: Install bundler
        run: |
          sudo gem install bundler

      - name: Install yq
        run: |
          sudo snap install yq
          # echo "::add-path::/snap/bin"
          echo "/snap/bin" >> $GITHUB_PATH

      - name: Instal gems from local Gemfile
        run: |
          curl -L --retry 3 https://raw.githubusercontent.com/metanorma/metanorma-build-scripts/master/gemfile-to-bundle-add.sh | bash

#      - uses: actions/checkout@master

      - name: Run tests
        run: |
          make test

      - name: Build
        run: |
          make all

      - name: Test against DTD NISO
        run: |
          make mn2stsDTD_NISO

#      - name: Test against DTD ISO
#        run: |
#          make mn2stsDTD_ISO

      - name: Compile output
        run: |
          make publish

#      - name: Deploy to Maven
#        env:
#          # for deploy mn2sts
#          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
#          GITHUB_USERNAME: ${{ secrets.PAT_USERNAME }}
#        run: |
#          make deploy

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automatic release of ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get Version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/mn2sts-${{ steps.get_version.outputs.VERSION }}.jar
          asset_name: mn2sts-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Notify mn2sts-ruby
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
          repository: metanorma/mn2sts-ruby
          event-type: metanorma/mn2sts
          client-payload: '{ "ref": "${{ github.ref }}" }'
